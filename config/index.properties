#**************************************************
# External Parameters Already Configured
#**************************************************
# ROOT_FOLDER: path to the directory where the repository has been cloned.
#             == DECAF_CONTAINER_ROOT_FOLDER environmental variable, set up in 'index.sh' launch script.
# VENV_FOLDER = path to the directory where the Python virtual environments are stored.
#             == DECAF_VENV_FOLDER environmental variable, set up in 'index.sh' launch script.


#**************************************************
# Launch Configuration
#**************************************************
# ********** General Configuration **********
#launch.num_threads = 8

# ********** Collection Configuration **********
#launch.corpus = CAsT1920
launch.corpus.CAsT1920.msmarco_corpus_filename = $(ROOT_FOLDER)/corpora/MS-MARCO-passage/collection.tsv
launch.corpus.CAsT1920.msmarco_duplicate_filename = $(ROOT_FOLDER)/corpora/MS-MARCO-passage/duplicate_list_v1.0.txt
launch.corpus.CAsT1920.treccar_corpus_filename = $(ROOT_FOLDER)/corpora/TREC-CAR/dedup.articles-paragraphs.cbor

# ********** Indexer Configuration **********
#launch.indexer = BoW
launch.indexer.BoW.index_directory = $(ROOT_FOLDER)/indexes/$(launch.corpus)__BoW_$(launch.indexer.BoW.analyzer)_$(launch.indexer.BoW.similarity)
launch.indexer.BoW.analyzer = English
#launch.indexer.BoW.similarity = BM25
launch.indexer.BoW.similarity.BM25.k1 = 0.82
launch.indexer.BoW.similarity.BM25.b = 0.4
#launch.indexer.BoW.similarity = Dirichlet
launch.indexer.BoW.similarity.Dirichlet.mu = 2000
launch.indexer.BoW.chunks_size = 1000000

#launch.indexer = Splade
launch.indexer.Splade.index_directory = $(ROOT_FOLDER)/indexes/$(launch.corpus)__Splade_$(launch.indexer.Splade.model)
launch.indexer.Splade.model = efficient-splade-V-large-doc
launch.indexer.Splade.max_tokens = 512
launch.indexer.Splade.multiplier = 1000
launch.indexer.Splade.batch_size = 1
launch.indexer.Splade.chunks_size = 100000

#launch.indexer = Dense
launch.indexer.Dense.index_directory = $(ROOT_FOLDER)/indexes/$(launch.corpus)__Dense_$(launch.indexer.Dense.model)_$(launch.indexer.Dense.similarity)
launch.indexer.Dense.model = distilbert-dot-tas_b-b256-msmarco
#launch.indexer.Dense.model = multi-qa-mpnet-base-dot-v1
launch.indexer.Dense.vector_size = 768
launch.indexer.Dense.max_tokens = 512
launch.indexer.Dense.similarity = dot
#launch.indexer.Dense.similarity = cos
#launch.indexer.Dense.similarity = l2
#launch.indexer.Dense.similarity = l2sq
launch.indexer.Dense.batch_size = 16
launch.indexer.Dense.chunks_size = 1000000


#****************************************************************************************************
#****************************************************************************************************
#****************************************************************************************************
#****************************************************************************************************
#****************************************************************************************************


#**************************************************
# Corpus Parser Configurations
#**************************************************
#--------------------------------------------------
# "CAsT1920" Corpus Parser Configuration
#--------------------------------------------------
corpus.CAsT1920.class = it.unipd.dei.corpus.MultiCorpusParser
corpus.CAsT1920.params = corporaParser
corpus.CAsT1920.params.corporaParser.type = java.util.List
corpus.CAsT1920.params.corporaParser = lcp
corpus.CAsT1920.params.corporaParser.lcp.class = it.unipd.dei.utils.ListBuilder
corpus.CAsT1920.params.corporaParser.lcp.params = msmarcoParser, treccarParser
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser.type = java.lang.Object
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser = mcp
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser.mcp.class = it.unipd.dei.corpus.MSMARCOv1CorpusParser
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser.mcp.params = corpusFilename, duplicateFilename
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser.mcp.params.corpusFilename = $(launch.corpus.CAsT1920.msmarco_corpus_filename)
corpus.CAsT1920.params.corporaParser.lcp.params.msmarcoParser.mcp.params.duplicateFilename = $(launch.corpus.CAsT1920.msmarco_duplicate_filename)
corpus.CAsT1920.params.corporaParser.lcp.params.treccarParser.type = java.lang.Object
corpus.CAsT1920.params.corporaParser.lcp.params.treccarParser = tcp
corpus.CAsT1920.params.corporaParser.lcp.params.treccarParser.tcp.class = it.unipd.dei.corpus.TRECCARv2CorpusParser
corpus.CAsT1920.params.corporaParser.lcp.params.treccarParser.tcp.params = corpusFilename
corpus.CAsT1920.params.corporaParser.lcp.params.treccarParser.tcp.params.corpusFilename = $(launch.corpus.CAsT1920.treccar_corpus_filename)

#**************************************************
# Indexer Configurations
#**************************************************

#--------------------------------------------------
# "BoW" Indexer Configuration
#--------------------------------------------------
indexer.BoW.class = it.unipd.dei.index.BoWIndexer
indexer.BoW.params = analyzer, similarity, indexDirectory, chunksSize, ramBufferSizeMB
indexer.BoW.params.analyzer.type = org.apache.lucene.analysis.Analyzer
indexer.BoW.params.analyzer = $(launch.indexer.BoW.analyzer)
indexer.BoW.params.analyzer.English.class = org.apache.lucene.analysis.en.EnglishAnalyzer
indexer.BoW.params.similarity.type = org.apache.lucene.search.similarities.Similarity
indexer.BoW.params.similarity = $(launch.indexer.BoW.similarity)
indexer.BoW.params.similarity.BM25.class = org.apache.lucene.search.similarities.BM25Similarity
indexer.BoW.params.similarity.BM25.params = k1, b
indexer.BoW.params.similarity.BM25.params.k1.type = float
indexer.BoW.params.similarity.BM25.params.k1 = $(launch.indexer.BoW.similarity.BM25.k1)
indexer.BoW.params.similarity.BM25.params.b.type = float
indexer.BoW.params.similarity.BM25.params.b = $(launch.indexer.BoW.similarity.BM25.b)
indexer.BoW.params.similarity.Dirichlet.class = org.apache.lucene.search.similarities.LMDirichletSimilarity
indexer.BoW.params.similarity.Dirichlet.params = mu
indexer.BoW.params.similarity.Dirichlet.params.mu.type = float
indexer.BoW.params.similarity.Dirichlet.params.mu = $(launch.indexer.BoW.similarity.Dirichlet.mu)
indexer.BoW.params.indexDirectory = $(launch.indexer.BoW.index_directory)
indexer.BoW.params.chunksSize.type = int
indexer.BoW.params.chunksSize = $(launch.indexer.BoW.chunks_size)
indexer.BoW.params.ramBufferSizeMB.type = int
indexer.BoW.params.ramBufferSizeMB = 1500

#--------------------------------------------------
# "Splade" Indexer Configuration
#--------------------------------------------------
indexer.Splade.class = it.unipd.dei.index.SpladeIndexer
indexer.Splade.params = analyzer, similarity, indexDirectory, pythonFilename, workingDirectory, scriptFilename, model, maxTokens, multiplier, batchSize, chunksSize, ramBufferSizeMB
indexer.Splade.params.analyzer.type = org.apache.lucene.analysis.Analyzer
indexer.Splade.params.analyzer = Whitespace
indexer.Splade.params.analyzer.Whitespace.class = org.apache.lucene.analysis.core.WhitespaceAnalyzer
indexer.Splade.params.similarity.type = org.apache.lucene.search.similarities.Similarity
indexer.Splade.params.similarity = DotProduct
indexer.Splade.params.similarity.DotProduct.class = it.unipd.dei.similarity.DotProductSimilarity
indexer.Splade.params.indexDirectory = $(launch.indexer.Splade.index_directory)
indexer.Splade.params.pythonFilename = $(VENV_FOLDER)/splade/bin/python
indexer.Splade.params.workingDirectory =
indexer.Splade.params.scriptFilename = $(ROOT_FOLDER)/src/main/python/splade_index.py
indexer.Splade.params.model = $(launch.indexer.Splade.model)
indexer.Splade.params.maxTokens.type = int
indexer.Splade.params.maxTokens = $(launch.indexer.Splade.max_tokens)
indexer.Splade.params.multiplier.type = double
indexer.Splade.params.multiplier = $(launch.indexer.Splade.multiplier)
indexer.Splade.params.batchSize.type = int
indexer.Splade.params.batchSize = $(launch.indexer.Splade.batch_size)
indexer.Splade.params.chunksSize.type = int
indexer.Splade.params.chunksSize = $(launch.indexer.Splade.chunks_size)
indexer.Splade.params.ramBufferSizeMB.type = int
indexer.Splade.params.ramBufferSizeMB = 1500

#--------------------------------------------------
# "Dense" Indexer Configuration
#--------------------------------------------------
indexer.Dense.class = it.unipd.dei.index.DenseIndexer
indexer.Dense.params = pythonFilename, workingDirectory, scriptFilename, indexDirectory, model, vectorSize, maxTokens, similarity, batchSize, chunksSize
indexer.Dense.params.pythonFilename = $(VENV_FOLDER)/faiss_fastcoref_spacy_transformers/bin/python
indexer.Dense.params.workingDirectory =
indexer.Dense.params.scriptFilename = $(ROOT_FOLDER)/src/main/python/faiss_index.py
indexer.Dense.params.indexDirectory = $(launch.indexer.Dense.index_directory)
indexer.Dense.params.model = $(launch.indexer.Dense.model)
indexer.Dense.params.vectorSize.type = int
indexer.Dense.params.vectorSize = $(launch.indexer.Dense.vector_size)
indexer.Dense.params.maxTokens.type = int
indexer.Dense.params.maxTokens = $(launch.indexer.Dense.max_tokens)
indexer.Dense.params.similarity = $(launch.indexer.Dense.similarity)
indexer.Dense.params.batchSize.type = int
indexer.Dense.params.batchSize = $(launch.indexer.Dense.batch_size)
indexer.Dense.params.chunksSize.type = int
indexer.Dense.params.chunksSize = $(launch.indexer.Dense.chunks_size)
